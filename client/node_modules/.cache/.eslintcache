[{"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\index.js":"1","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\App.js":"2","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\reportWebVitals.js":"3","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\SignIn.js":"4","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\SignUp.js":"5","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Cards\\Cards.js":"6","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Cards\\CardDetails.js":"7","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Cards\\grid.js":"8","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\ProductPage\\ProductDetails.js":"9","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Home.js":"10","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\Header\\Header.js":"11","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Footer\\Footer.js":"12","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\OtpVerification\\OtpVerifiction.js":"13","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\Admin\\AddProduct.js":"14","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\SearchItem.js":"15","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\helper\\authHelper.js":"16","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Cards\\FirstBody\\FirstBody.js":"17","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Items\\Items.js":"18","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Items\\CropItem.js":"19","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\ProductPage\\MoreByCompany\\MoreByCompany.js":"20","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\LandingPage\\LandingPage.js":"21","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\LandingPage\\SearchCard.js":"22","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\LandingPage\\ItemsCard.js":"23","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\LandingPage\\SeedItems.js":"24","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\UserLocation\\UserLocation.js":"25","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\Weather\\Weather.js":"26","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\Weather\\ForecasteWeather.js":"27","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\Weather\\DayCard.js":"28","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\LandingPage\\Itemcarousel.js":"29"},{"size":279,"mtime":1617258907472,"results":"30","hashOfConfig":"31"},{"size":1742,"mtime":1617627165736,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1617258907473,"results":"33","hashOfConfig":"31"},{"size":6207,"mtime":1617600923692,"results":"34","hashOfConfig":"31"},{"size":6111,"mtime":1617258907469,"results":"35","hashOfConfig":"31"},{"size":12721,"mtime":1617600923689,"results":"36","hashOfConfig":"31"},{"size":6060,"mtime":1617605099591,"results":"37","hashOfConfig":"31"},{"size":1967,"mtime":1617258907442,"results":"38","hashOfConfig":"31"},{"size":14576,"mtime":1617258907466,"results":"39","hashOfConfig":"31"},{"size":7228,"mtime":1617258907445,"results":"40","hashOfConfig":"31"},{"size":8531,"mtime":1617258907438,"results":"41","hashOfConfig":"31"},{"size":3616,"mtime":1617258907444,"results":"42","hashOfConfig":"31"},{"size":6985,"mtime":1617605099613,"results":"43","hashOfConfig":"31"},{"size":6863,"mtime":1617258907427,"results":"44","hashOfConfig":"31"},{"size":10181,"mtime":1617600923690,"results":"45","hashOfConfig":"31"},{"size":1193,"mtime":1617600923695,"results":"46","hashOfConfig":"31"},{"size":6839,"mtime":1617258907442,"results":"47","hashOfConfig":"31"},{"size":47685,"mtime":1617258907461,"results":"48","hashOfConfig":"31"},{"size":1427,"mtime":1617258907445,"results":"49","hashOfConfig":"31"},{"size":8922,"mtime":1617258907465,"results":"50","hashOfConfig":"31"},{"size":5263,"mtime":1617628205602,"results":"51","hashOfConfig":"31"},{"size":2252,"mtime":1617605099593,"results":"52","hashOfConfig":"31"},{"size":1847,"mtime":1617605099592,"results":"53","hashOfConfig":"31"},{"size":723,"mtime":1617605099593,"results":"54","hashOfConfig":"31"},{"size":4389,"mtime":1617600923693,"results":"55","hashOfConfig":"31"},{"size":2424,"mtime":1617605099616,"results":"56","hashOfConfig":"31"},{"size":1351,"mtime":1617605099615,"results":"57","hashOfConfig":"31"},{"size":1245,"mtime":1617605099615,"results":"58","hashOfConfig":"31"},{"size":1161,"mtime":1617623403012,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1lflnhb",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\index.js",[],["128","129"],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\App.js",["130"],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\reportWebVitals.js",[],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\SignIn.js",["131","132","133","134"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n// import Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport \"./SignIn.css\";\r\nimport { authenticate, isAuth } from \"../helper/authHelper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  // avatar: {\r\n  //   margin: theme.spacing(1),\r\n  //   backgroundColor: theme.palette.secondary.main,\r\n  // },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  mains: {\r\n    marginBottom: \"75px\"\r\n  }\r\n}));\r\n\r\nexport default function SignIn({ history }) {\r\n  const classes = useStyles();\r\n  const [loginVal, setLoginVal] = useState({\r\n    user_name: \"\",\r\n    user_password: \"\",\r\n  });\r\n\r\n  const { user_name, user_password } = loginVal;\r\n\r\n  const handleChange = (text) => (event) => {\r\n    setLoginVal({ ...loginVal, [text]: event.target.value });\r\n  }; \r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    Axios.post(`${process.env.REACT_APP_API_URI}/login`, loginVal)\r\n      .then((res) => {\r\n        console.log(\"res.data\", res.data);\r\n        const { message, status } = res.data;\r\n        if (status) {\r\n          authenticate(res, () => {\r\n            window.location.reload();\r\n            history.push(\"/home\");\r\n            setLoginVal({ ...loginVal, user_name: \"\", user_password: \"\" });\r\n          });\r\n        } else {\r\n          alert(message);\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  console.log(\"login values\", loginVal);\r\n  return (\r\n    <div className={classes.mains}>\r\n      {isAuth() ? <Redirect to=\"/home\" /> : null}\r\n      <Container component=\"main\" maxWidth=\"xs\" id=\"container\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {/* <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar> */}\r\n          <Avatar\r\n            alt=\"Remy Sharp\"\r\n            src=\"http://pland.farm/bw-assets/bw-img/logo.png\"\r\n            className={classes.image}\r\n            id=\"testind\"\r\n          />\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"User Name\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              value={user_name}\r\n              onChange={handleChange(\"user_name\")}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={user_password}\r\n              onChange={handleChange(\"user_password\")}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container direction=\"column\">\r\n              <Grid item>\r\n                <Link to=\"/otpauth\" variant=\"body2\">\r\n                  {\"Login with mobile\"}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            {/* <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"User Name\"\r\n              name=\"username\"\r\n              autoComplete=\"username\"\r\n              autoFocus\r\n              value={user_name}\r\n              onChange={handleChange(\"user_name\")}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={user_password}\r\n              onChange={handleChange(\"user_password\")}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container direction=\"column\">\r\n              <Grid item>\r\n                <Link to=\"/otpauth\" variant=\"body2\">\r\n                  {\"Login with mobile\"}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid> */}\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\SignUp.js",["135","136","137","138","139"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n// import Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Axios from \"axios\";\r\nimport \"./SignUp.css\";\r\nimport { isAuth } from \"../helper/authHelper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [formVal, setFormVal] = useState({\r\n    first_name: \"\",\r\n    // lname: \"\",\r\n    user_name: \"\",\r\n    user_mobile: \"\",\r\n    user_password: \"\",\r\n  });\r\n\r\n  const fillForm = (text) => (event) => {\r\n    console.log(\"rext checking\", text); \r\n    setFormVal({ ...formVal, [text]: event.target.value });\r\n  };\r\n\r\n  const {\r\n    first_name,\r\n    last_name,\r\n    user_name,\r\n    user_mobile,\r\n    user_password,\r\n  } = formVal;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (first_name && user_name && user_mobile && user_password) {\r\n      Axios.post(`${process.env.REACT_APP_API_URI}/signup`, formVal)\r\n        .then((response) => {\r\n          const { status, exuser } = response.data;\r\n          console.log(\"response.data\", response.data);\r\n          if (!status) {\r\n            alert(`${exuser}, already taken`);\r\n          } else {\r\n            alert(`${exuser}, Welcome our team`);\r\n            setFormVal({\r\n              ...formVal,\r\n              first_name: \"\",\r\n              last_name: \"\",\r\n              user_name: \"\",\r\n              user_mobile: \"\",\r\n              user_password: \"\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      alert(\"please fill all fields\");\r\n    }\r\n  };\r\n\r\n  console.log(formVal);\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" style={{marginBottom: 30}}>\r\n      {isAuth() ? <Redirect to=\"/home\" /> : null}\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {/* <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar> */}\r\n        <Avatar\r\n          alt=\"Remy Sharp\"\r\n          src=\"http://pland.farm/bw-assets/bw-img/logo.png\"\r\n          className={classes.image}\r\n          id=\"testind\"\r\n        />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"first_name\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                value={first_name}\r\n                onChange={fillForm(\"first_name\")}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}> \r\n              <TextField\r\n                variant=\"outlined\"\r\n                // required\r\n                fullWidth\r\n                id=\"lastname\"\r\n                label=\"Last Name\"\r\n                name=\"lastname\"\r\n                autoComplete=\"last_name\"\r\n                value={last_name}\r\n                onChange={fillForm(\"last_name\")}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"User Name\"\r\n                name=\"username\"\r\n                autoComplete=\"user_name\"\r\n                value={user_name}\r\n                onChange={fillForm(\"user_name\")}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"mobile\"\r\n                label=\"Mobile Number\"\r\n                name=\"mobile\"\r\n                autoComplete=\"user_mobile\"\r\n                value={user_mobile}\r\n                onChange={fillForm(\"user_mobile\")}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={user_password}\r\n                onChange={fillForm(\"user_password\")}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Cards\\Cards.js",["140","141","142","143","144","145","146","147","148","149","150"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Link from \"@material-ui/core/Typography\";\r\nimport { Box, Divider, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useHistory, Link as Links } from \"react-router-dom\";\r\nimport FirstBody from \"./FirstBody/FirstBody\";\r\nimport { machinery } from \"../Items/Items\";\r\nimport SeachItem from \"../SearchItem\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { crops } from \"../Items/CropItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  roots: {\r\n    textAlign: \"-webkit-center\",\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  space: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  gridOne: {\r\n    marginTop: theme.spacing(1.3),\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  searchItem: {\r\n    margin: theme.spacing(4),\r\n  },\r\n  crop: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  price: {\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: theme.spacing(1.8),\r\n  },\r\n  itemName: {\r\n    alignSelf: \"center\",\r\n  },\r\n  itemNames: {\r\n    fontWeight: \"bold\",\r\n    color: \"#1f2922\",\r\n  },\r\n  firstBody: {\r\n    height: 300,\r\n  },\r\n  crops: {\r\n    fontSize: 14,\r\n    fontWeight: \"700\",\r\n    letterSpacing: \"normal\",\r\n    textAlign: \"right\",\r\n    color: \"#141414\",\r\n  },\r\n  variety: {\r\n    marginLeft: \"auto\",\r\n    margin: \"-50px 0 0 135px\",\r\n  },\r\n  model: {\r\n    fontSize: 14,\r\n    fontWeight: \"700\",\r\n    letterSpacing: \"normal\",\r\n    // textAlign: \"right\",\r\n    color: \"#141414\",\r\n  },\r\n  modelName: {\r\n    color: \"#827575\",\r\n    fontWeight: \"bold\",\r\n    display: \"inline-block\",\r\n    width: 116,\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden !important\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  manufacture: {\r\n    flexShrink: \"1\",\r\n    flexGrow: \"1\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n}));\r\nconst MediaCard = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [itemData, setItemData] = useState([]);\r\n  const [cropss, setCrops] = useState([]);\r\n\r\n  const handleClick = (id) => {\r\n    console.log(\"item _id\", id);\r\n    history.push(`/product?id=${id}`);\r\n    // history.push(`/view?id=${id}`);\r\n  };\r\n\r\n  const passData = (items) => {\r\n    setItemData(items);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   Axios.post(\"http://localhost:5000/insertalldata\", crops)\r\n  //     .then((allDatas) => {\r\n  //       console.log(\"all datas\", allDatas);\r\n  //       setItemData(allDatas.data);\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n\r\n  //   // setItemData(machinery);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"EEEEEEEEEEEEEEEEe\", itemData);\r\n    Axios.get(\"http://localhost:5000/getallproducts\")\r\n      .then((allDatas) => {\r\n        console.log(\"all datas\", allDatas.data);\r\n        setItemData(allDatas.data); \r\n        // setCrops(allDatas.data.crop)\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    // setItemData(machinery);\r\n  }, []);\r\n\r\n  const newFunc = (data) => {\r\n    console.log(\"newFun\", data);\r\n    setItemData(data);\r\n  };\r\n\r\n  console.log(\"item all data\", itemData);\r\n\r\n  const handleLink = () => {\r\n    <Redirect href=\"https://www.youtube.com/watch?v=nziA33FrhoI\" />\r\n    // Redirect=\"https://www.youtube.com/watch?v=nziA33FrhoI\"\r\n  };\r\n\r\n  const searchR = (searchProducts) => {\r\n    console.log(\"data################\", searchProducts);\r\n    setItemData(searchProducts)\r\n    alert(\"serachR\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.roots}>\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <Grid item mt={3} className={classes.searchItem}>\r\n            <SeachItem searchResult={searchR} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3} m={2} mx=\"auto\" mt={2}>\r\n                <FirstBody\r\n                  itemData={itemData}\r\n                  passCrop={newFunc}\r\n                  className={classes.firstBody}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <Grid\r\n                  container\r\n                  spacing={20}\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  {itemData.slice(0, 12).map((data, index) => {\r\n                    const { youtube, crops, model } = data;\r\n                    return (\r\n                      <Grid\r\n                        key={index}\r\n                        xs={12}\r\n                        sm={6}\r\n                        md={4}\r\n                        className={classes.space}\r\n                      >\r\n                        <Card className={classes.root} mt={2}>\r\n                          <CardActionArea onClick={() => handleClick(data._id)}>\r\n                            <Grid container>\r\n                              <Grid item xs={6} className={classes.itemName}>\r\n                                <Typography\r\n                                  variant=\"h5\"\r\n                                  className={classes.itemNames}\r\n                                >\r\n                                  {data.product_name}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <CardMedia\r\n                                  className={classes.media}\r\n                                  image={data.image}\r\n                                  title=\"Contemplative Reptile\"\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Divider />\r\n                            <CardContent>\r\n                              <Grid container className={classes.cro}>\r\n                                <Grid item xs={6}>\r\n                                  <Grid\r\n                                    container\r\n                                    direction=\"column\"\r\n                                    align=\"left\"\r\n                                  >\r\n                                    <Grid variant=\"h4\">crop</Grid>\r\n                                    <Grid container xs={12} spacing={1}>\r\n                                      <Grid item>\r\n                                        <Typography\r\n                                          variant=\"h6\"\r\n                                          className={classes.crops}\r\n                                        >\r\n                                          {data.product_crops}\r\n                                        </Typography>\r\n                                      </Grid>\r\n                                      {/* {crops.slice().map((datas) => {\r\n                                        return (\r\n                                          <Grid item>\r\n                                            <Typography\r\n                                              variant=\"h6\"\r\n                                              className={classes.crops}\r\n                                            >\r\n                                              {datas}\r\n                                            </Typography>\r\n                                          </Grid>\r\n                                        );\r\n                                      })} */}\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Divider orientation=\"vertical\" flexItem />\r\n                                <Grid\r\n                                  item\r\n                                  container\r\n                                  xs={6}\r\n                                  direction=\"column\"\r\n                                  className={classes.variety}\r\n                                >\r\n                                  <Box item m={1}>\r\n                                    <Grid item>\r\n                                      <Typography className={classes.model}>\r\n                                        Model\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                      <Typography className={classes.modelName}>\r\n                                        {data.product_model}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                  </Box>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Divider />\r\n                              <Grid container className={classes.crop}>\r\n                                <Grid item xs={6} align=\"left\">\r\n                                  <Typography variant=\"subtitle1\">\r\n                                    Manufacturer\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                  <Typography\r\n                                    variant=\"h6\"\r\n                                    className={classes.manufacture}\r\n                                  >\r\n                                    {data.product_manufacturer}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Divider />\r\n                              <Grid container className={classes.crop}>\r\n                                <Grid item xs={6}>\r\n                                  <Typography\r\n                                    variant=\"subtitle1\"\r\n                                    align=\"left\"\r\n                                    color=\"inherit\"\r\n                                  >\r\n                                    Prebuilt\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                  <Typography variant=\"h6\">\r\n                                    {data.pre_build}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Divider />\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Grid container spacing={2}>\r\n                              <Grid\r\n                                item\r\n                                container\r\n                                xs={6}\r\n                                spacing={1}\r\n                                className={classes.price}\r\n                              >\r\n                                <Grid item>₹</Grid>\r\n                                <Grid item>{data.product_price}</Grid>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <Links\r\n                                  cursor=\"default\"\r\n                                  color=\"primary\"\r\n                                  size=\"small\"\r\n                                  to={{\r\n                                    pathname: youtube,\r\n                                  }}\r\n                                  target=\"_blank\"\r\n                                  onClick={handleLink}\r\n                                >\r\n                                  <YouTubeIcon color=\"error\" />\r\n                                </Links>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </CardActions>\r\n                        </Card>\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n export default MediaCard;\r\n","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Cards\\CardDetails.js",[],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Cards\\grid.js",[],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\ProductPage\\ProductDetails.js",["151","152","153"],"import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  CardMedia,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nimport queryString from \"query-string\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MoreByCompany from \"./MoreByCompany/MoreByCompany\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 499,\r\n    width: \"100%\",\r\n    borderRadius: theme.spacing(2),\r\n    backgroundSize: \"100% 100%\",\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  fBody: {\r\n    height: \"fit-content\",\r\n    padding: \"12px 55px 12px 55px\",\r\n  },\r\n  sBody: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"700\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"1.25\",\r\n    letterSpacing: \"normal\",\r\n    textAlign: \"left\",\r\n    color: \"#191919\",\r\n  },\r\n  sGrid: {\r\n    padding: \"30px 10px 10px 30px\",\r\n    height: \"fit-content\",\r\n  },\r\n  firstBody: {\r\n    // padding: theme.spacing(5),\r\n    height: \"fit-content\",\r\n  },\r\n  imageBody: {\r\n    padding: theme.spacing(5),\r\n  },\r\n  descriptionOne: {\r\n    fontSize: 20,\r\n    fontWeight: \"700\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"1.47\",\r\n    letterSpacing: \".08px\",\r\n    textAlign: \"left\",\r\n    color: \"#2b2b2b\",\r\n    marginTop: \"15px\",\r\n  },\r\n  price: {\r\n    width: \"115px\",\r\n    height: \"65px\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"silver\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"15px\",\r\n  },\r\n  insidePricef: {\r\n    marginTop: theme.spacing(1),\r\n    textAlign: \"center\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  itemDetails: {\r\n    backgroundColor: \"#dff1eb\",\r\n    width: \"100%\",\r\n    height: \"300px\",\r\n    borderRadius: \"10px\",\r\n    marginTop: \"19px\",\r\n  },\r\n  gridOne: {\r\n    textAlign: \"center\",\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n    // backgroundColor: \"#00b074\"\r\n  },\r\n  buyButton: {\r\n    float: \"right\",\r\n    // backgroundColor: \"red\",\r\n  },\r\n  sellerDetails: {\r\n    height: 100,\r\n    width: 100,\r\n    borderRadius: theme.spacing(2),\r\n    backgroundSize: \"100% 100%\",\r\n  },\r\n  sellerBody: {\r\n    padding: \"46px 100px 33px 100px\",\r\n  },\r\n  varified: {\r\n    alignSelf: \"center\",\r\n    color: \"green\",\r\n  },\r\n  divi: {\r\n    color: \"red\",\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  checkICon: {\r\n    fontSize: 19,\r\n  },\r\n  joinDate: {\r\n    placeContent: \"center\",\r\n  },\r\n  items: {\r\n    fontWeight: \"bolder\",\r\n    fontSize: 15,\r\n    color: \"#2a584c\",\r\n  },\r\n  itemsOne: {\r\n    fontSize: 10,\r\n  },\r\n  mainItems: {\r\n    padding: \"17px 3px 0 45px\",\r\n    textAlignLast: \"left\",\r\n  },\r\n  sellerProfile: {\r\n    width: 200,\r\n    backgroundColor: \"#efefef\",\r\n    borderRadius: \"5px 5px 0px 0px\",\r\n    borderBottom: \"4px solid #30a05f\",\r\n    height: 50,\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction ProductDetails({ location }) {\r\n  const [productItem, setProductItem] = useState(\"\");\r\n  const id = queryString.parse(location.search);\r\n\r\n  const {\r\n    _id,\r\n    crop,\r\n    description,\r\n    image,\r\n    manufactured,\r\n    name,\r\n    phaseofcrop,\r\n    prebuilt,\r\n    price,\r\n    use,\r\n    website,\r\n    youtube,\r\n  } = productItem;\r\n\r\n  useEffect(() => {\r\n    Axios.get(`http://localhost:5000/getitem`, {\r\n      params: id,\r\n    }).then((item) => {\r\n      setProductItem(item.data);\r\n    });\r\n  }, []);\r\n\r\n  console.log(\"productItem\", productItem);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Grid container className={classes.fBody}>\r\n        <Grid item xs={5} align=\"center\">\r\n          {/* <Typography variant=\"h1\">first body</Typography> */}\r\n          <CardMedia\r\n            className={classes.media}\r\n            title=\"Contemplative Reptile\"\r\n            image={image}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={7} spacing={0} className={classes.sGrid}>\r\n          <Box component=\"div\" p={1}>\r\n            <Grid container className={classes.firstBody}>\r\n              <Grid item xs={6} container direction=\"column\" spacing={1}>\r\n                <Grid item>\r\n                  <Typography variant=\"h5\" className={classes.sBody}>\r\n                    {name}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" spacing={1}>\r\n                  <Grid item>\r\n                    <Avatar\r\n                      alt=\"Travis Howard\"\r\n                      src=\"https://5.imimg.com/data5/HZ/JZ/BV/SELLER-3213215/rice-huller-with-polisher-blower-attached-500x500.jpg\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Grid item>\r\n                      <Typography variant=\"body2\">Listed By</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"body2\">Kumar</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Box\r\n                  variant=\"caption\"\r\n                  display=\"flex\"\r\n                  justifyContent=\"flex-end\"\r\n                  m={1}\r\n                  p={1}\r\n                >\r\n                  {/* Last updated time */}\r\n                  <Link\r\n                    cursor=\"default\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    to={{\r\n                      pathname: website,\r\n                    }}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <LinkIcon style={{ color: \"blue\" }} />\r\n                  </Link>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider} />\r\n            <Grid>\r\n              <Grid container xs={12}>\r\n                <Grid container direction=\"column\" spacing={0.5} item xs={6}>\r\n                  <Grid item>\r\n                    <Typography variant=\"h4\" className={classes.descriptionOne}>\r\n                      DESCRIPTION\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant=\"subtitle1\">{description}</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Box className={classes.price}>\r\n                    <Grid container direction=\"column\" spacing={1}>\r\n                      <Box className={classes.insidePricef}>\r\n                        <Grid item>\r\n                          <Typography>Rs {price}</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Typography>PER TONNE</Typography>\r\n                        </Grid>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider} />\r\n            <Box className={classes.itemDetails}>\r\n              <Grid container xs={12} className={classes.mainItems}>\r\n                <Grid item container className={classes.gridOne}>\r\n                  <Grid item xs={4}>\r\n                    <Typography className={classes.items}>CROP</Typography>\r\n                    <Typography className={classes.itemsOne}>crop,crop,crop,crop,crop,crop,crop</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography className={classes.items}>PRE BUILT</Typography>\r\n                    <Typography className={classes.itemsOne}>\r\n                      {prebuilt}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography className={classes.items}>QUANTITY</Typography>\r\n                    <Typography className={classes.itemsOne}>1</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item container className={classes.gridOne}>\r\n                  <Grid item xs={4}>\r\n                    <Typography className={classes.items}>\r\n                      PHASE OF CROP\r\n                    </Typography>\r\n                    <Typography className={classes.itemsOne}>\r\n                      {phaseofcrop}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography className={classes.items}>\r\n                      MANUFACTUARED\r\n                    </Typography>\r\n                    <Typography className={classes.itemsOne}>\r\n                      {manufactured}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography className={classes.items}>VARIETY</Typography>\r\n                    <Typography className={classes.itemsOne}>\r\n                      VARIETY\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item container className={classes.gridOne}>\r\n                  <Grid item xs={4}>\r\n                    <Typography>CROP</Typography>\r\n                    <Typography>CROP</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography>VARIETY</Typography>\r\n                    <Typography>VARIETY</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography>QUANTITY</Typography>\r\n                    <Typography>QUANTITY</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Box component=\"div\" pl={7} pr={7} className={classes.buyTag}>\r\n        <Divider />\r\n        <Grid container direction=\"column\">\r\n          <Grid item>\r\n            <Box m={1} p={1} className={classes.buyButton}>\r\n              <Grid container>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className={classes.margin}\r\n                    style={{ backgroundColor: \"red\", color: \"white\" }}\r\n                    target=\"_blank\"\r\n                    href={youtube}\r\n                  >\r\n                    Youtube\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    color=\"secondary\"\r\n                    className={classes.margin}\r\n                    style={{ backgroundColor: \"#00b074\" }}\r\n                    target=\"_blank\"\r\n                    href={website}\r\n                  >\r\n                    Website\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n          <Divider />\r\n          <Grid item>\r\n            <Box mt={5} className={classes}>\r\n              <Box className={classes.sellerProfile}>\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  mt={3}\r\n                  style={{ fontSize: \"25px\", fontWeight: \"700\", padding: 7 }}\r\n                >\r\n                  Seller Profile\r\n                </Typography>\r\n              </Box>\r\n              <Divider />\r\n              <Box className={classes.sellerBody}>\r\n                <Box mb={2}>\r\n                  <Typography className={classes.descriptionOne}>\r\n                    Personal Details\r\n                  </Typography>\r\n                </Box>\r\n                <Grid container xs={12}>\r\n                  <Grid item container xs={6} spacing={0}>\r\n                    <Grid item container direction=\"column\" xs={3}>\r\n                      {/* <Grid item>\r\n                        <Typography>Personal Details</Typography>\r\n                      </Grid> */}\r\n                      <Grid item>\r\n                        <CardMedia\r\n                          className={classes.sellerDetails}\r\n                          title=\"Contemplative Reptile\"\r\n                          image=\"https://5.imimg.com/data5/HZ/JZ/BV/SELLER-3213215/rice-huller-with-polisher-blower-attached-500x500.jpg\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item container direction=\"column\" xs={3}>\r\n                      <Box alignSelf=\"center\">\r\n                        <Grid item>\r\n                          <Typography variant=\"caption\">Seller Name</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Typography variant=\"h5\">Rashik</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Typography variant=\"caption\">\r\n                            Company Name\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Typography variant=\"h5\">Mahindra</Typography>\r\n                        </Grid>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={3}\r\n                    container\r\n                    className={classes.varified}\r\n                    spacing={1}\r\n                  >\r\n                    <Grid item>\r\n                      <CheckCircleRoundedIcon className={classes.checkICon} />\r\n                    </Grid>\r\n                    <Grid item>Verified User</Grid>\r\n                  </Grid>\r\n                  <Divider orientation=\"vertical\" flexItem />\r\n                  <Grid\r\n                    item\r\n                    xs={3}\r\n                    container\r\n                    direction=\"column\"\r\n                    className={classes.joinDate}\r\n                  >\r\n                    <Grid item>\r\n                      <Typography variant=\"caption\">JOINED ON</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography>January 2021</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n          <Divider />\r\n          <MoreByCompany itemCrop={crop} />\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\n export default ProductDetails;\r\n","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Home.js",["154","155","156","157","158"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Cards from \"./Cards/Cards\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, CardMedia, Grid, IconButton } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/HomeRounded\";\r\nimport About from \"@material-ui/icons/InfoRounded\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\r\nimport { isAuth, signout } from \"../../helper/authHelper\"; \r\nimport Logo from \"../../images/logo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconName: {\r\n    // textDecoration: blur,\r\n    textDecoration: \"solid\",\r\n    color: \"white\",\r\n  },\r\n  desctopOptions: {\r\n    margin: theme.spacing(0, 0, 0, 2.3),\r\n  },\r\n  headerData: {\r\n    float: \"right\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  media: {\r\n    width: 150,\r\n    height: 80,\r\n    marginTop: 4,\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst menuId = \"primary-search-account-menu\";\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\n export default function HideAppBar(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const signOut = () => {\r\n    window.location.reload();\r\n    signout();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAuth() ? null : <Redirect to=\"/\" />}\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n        <AppBar\r\n          classeName={classes.header}\r\n          style={{ backgroundColor: \"white\", color: \"black\" }}\r\n        >\r\n          <Toolbar>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h6\">\r\n                  {/* <Link to=\"/home\" className={classes.iconName}>\r\n\r\n                  </Link> */}\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image={Logo}\r\n                    title=\"Contemplative Reptile\"\r\n                    onClick={() =>\r\n                      isAuth() ? history.push(\"/home\") : history.push(\"/\")\r\n                    }\r\n                  />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {/* {isAuth()} */}\r\n                {isAuth() ? (\r\n                  console.log(),\r\n                  <Box className={classes.headerData} justifyContent=\"flex-end\">\r\n                    <IconButton\r\n                      color=\"default\"\r\n                      className={classes.desctopOptions}\r\n                    >\r\n                      {/* <Grid containe xs={12}></Grid> */}\r\n                      <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                          <HomeIcon />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Typography>Home</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label=\"show 17 new notifications\"\r\n                      color=\"default\"\r\n                      className={classes.desctopOptions}\r\n                    >\r\n                      {/* <Badge badgeContent={17} color=\"secondary\"> */}\r\n                      <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                          <About />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Typography>About</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                      {/* </Badge> */}\r\n                    </IconButton>\r\n                    <IconButton\r\n                      edge=\"end\"\r\n                      aria-label=\"account of current user\"\r\n                      aria-controls={menuId}\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleProfileMenuOpen}\r\n                      color=\"inherit\"\r\n                      className={classes.desctopOptions}\r\n                    >\r\n                      <Grid container direction=\"column\">\r\n                        <PopupState>\r\n                          {(popupState) => (\r\n                            <React.Fragment>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                  backgroundColor: \"#00b074\",\r\n                                  color: \"white\",\r\n                                }} \r\n                                {...bindTrigger(popupState)}\r\n                              >\r\n                                <Grid\r\n                                  container\r\n                                  spacing={1}\r\n                                  style={{ marginTop: \"2px\" }}\r\n                                >\r\n                                  <Grid item>\r\n                                    <AccountCircle />\r\n                                  </Grid>\r\n                                  <Grid item>\r\n                                    <Typography>{isAuth().first_name}</Typography>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </Button>\r\n                              <Menu {...bindMenu(popupState)}>\r\n                                <MenuItem onClick={popupState.close}>\r\n                                  Profile\r\n                                </MenuItem>\r\n                                <MenuItem onClick={popupState.close}>\r\n                                  <Typography onClick={signOut}>\r\n                                    LogOut\r\n                                  </Typography>\r\n                                </MenuItem>\r\n                              </Menu>\r\n                            </React.Fragment>\r\n                          )}\r\n                        </PopupState>\r\n                      </Grid>\r\n                    </IconButton>\r\n                  </Box>\r\n                ) : null}\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </>\r\n  );\r\n}\r\n","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\Header\\Header.js",["159","160","161","162","163","164","165","166","167","168","169"],"import React, { useState } from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Box, Grid, Slide, useScrollTrigger } from \"@material-ui/core\";\r\nimport LogOut from \"@material-ui/icons/ExitToApp\";\r\nimport HomeIcon from \"@material-ui/icons/HomeRounded\";\r\nimport About from \"@material-ui/icons/InfoRounded\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: \"block\",\r\n      // [theme.breakpoints.up(\"sm\")]: {\r\n      //   display: \"block\",\r\n      // },\r\n    },\r\n    search: {\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      \"&:hover\": {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: \"auto\",\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      pointerEvents: \"none\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n      color: \"inherit\",\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create(\"width\"),\r\n      width: \"100%\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"flex\",\r\n        marginRight: theme.spacing(1.3),\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: \"flex\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    desctopOptions: {\r\n      margin: theme.spacing(0, 0, 0, 2.3),\r\n    },\r\n    profilePopup: {\r\n      marginTop: 50,\r\n    },\r\n}));\r\n\r\n export default function PrimarySearchAppBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n      className={classes.profilePopup}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>LogOut</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <HomeIcon />\r\n        </IconButton>\r\n        <p>Home</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <About />\r\n        </IconButton>\r\n        <p>About</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    // <HideOnScroll {...props}>\r\n      <div className={classes.grow}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n              PLAND.FARM\r\n            </Typography>\r\n\r\n            {/* Search option 🤭  */}\r\n            {/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div> */}\r\n            <div className={classes.grow} />\r\n            <div className={classes.sectionDesktop}>\r\n              <IconButton color=\"inherit\" className={classes.desctopOptions}>\r\n                {/* <Grid containe xs={12}></Grid> */}\r\n                <Grid container direction=\"column\">\r\n                  <Grid item>\r\n                    <HomeIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography>Home</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </IconButton>\r\n              <IconButton\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n                className={classes.desctopOptions}\r\n              >\r\n                {/* <Badge badgeContent={17} color=\"secondary\"> */}\r\n                <Grid container direction=\"column\">\r\n                  <Grid item>\r\n                    <About />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography>About</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n                {/* </Badge> */}\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n                className={classes.desctopOptions}\r\n              >\r\n                <Grid container direction=\"column\">\r\n                  <Grid item>\r\n                    <AccountCircle />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography>User</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.sectionMobile}>\r\n              <IconButton\r\n                aria-label=\"show more\"\r\n                aria-controls={mobileMenuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMobileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* </HideOnScroll> */}\r\n        {renderMobileMenu}\r\n        {renderMenu}\r\n      </div>\r\n  );\r\n}\r\n","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Footer\\Footer.js",[],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\OtpVerification\\OtpVerifiction.js",["170","171","172","173","174","175","176"],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\Admin\\AddProduct.js",[],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\SearchItem.js",["177","178","179"],"/* eslint-disable no-use-before-define */\r\nimport React, { Fragment as div, useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Box, Button, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  searchItems: {\r\n    borderColor: \"red\",\r\n    justifyContent: \"center\",\r\n  },\r\n  container: {\r\n    textAlign: \"-webkit-center\",\r\n  },\r\n}));\r\n\r\nconst defaultProps = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"#f1f1f1\",\r\n  // borderColor: \"#3f51b5\",\r\n  m: 1,\r\n  border: 1,\r\n  style: { width: \"fit-content\" },\r\n};\r\n\r\n export default function SearchItem({ searchResult }) {\r\n  // console.log(\"datass\", datass);\r\n  const classes = useStyles();\r\n  const [searchData, setSearchData] = useState({\r\n    manufacture: \"\",\r\n    crop: \"\",\r\n  });\r\n  const [manufactures, setManufactures] = useState([]);\r\n  const [crops, setCrops] = useState([]);\r\n  const [searchProducts, setSearchProducts] = useState({});\r\n\r\n  const { manufacture, crop } = searchData;\r\n\r\n  useEffect(() => {\r\n    Axios.get(`${process.env.REACT_APP_API_URI}/getsearchkeys`).then(\r\n      (result) => {\r\n        console.log(\"@@@@@@@@@@@@@\", result);\r\n        setManufactures(result.data.manuf);\r\n        setCrops(result.data.crops);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const handleChange = (text) => (event) => {\r\n    console.log(\"event.targer.value\", event.target.innerText);\r\n    setSearchData({ ...searchData, [text]: event.target.innerText });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    console.log(\"last data\", searchData);\r\n    Axios.get(`${process.env.REACT_APP_API_URI}/findsearchdata`, {\r\n      params: searchData,\r\n    })\r\n      .then((products) => {\r\n        console.log(\"@@@@@@@@@@@@\", products.data);\r\n        if (!products.data) {\r\n          alert(\"Product Null\");\r\n        }\r\n        setSearchProducts(...products.data);\r\n        searchResult(products.data)\r\n        // setSearchData({ ...searchData, manufacture: \"\", crop: \"\" });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  console.log(\"search data\", searchProducts);\r\n\r\n  return (\r\n    <div container className={classes.container}>\r\n      <Grid container direction=\"column\" spacing={4}>\r\n        <Grid item>\r\n          <Typography variant=\"h4\">Search for seed near you</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Box borderRadius={16} {...defaultProps} p={2}>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              alignItems=\"center\"\r\n              className={classes.searchItems}\r\n            >\r\n              <Grid item>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={manufactures}\r\n                  getOptionLabel={(option) => option.manuf_name}\r\n                  style={{ width: 300 }}\r\n                  onChange={handleChange(\"manufacture\")}\r\n                  // value={manufacture}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Select Manufacturer\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={crops}\r\n                  getOptionLabel={(option) => option.crop_name}\r\n                  style={{ width: 300 }}\r\n                  onChange={handleChange(\"crop\")}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Select Crop\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              {/* <Grid item>\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={top100Films}\r\n                  getOptionLabel={(option) => option.title}\r\n                  style={{ width: 350 }}\r\n                  onChange={handleChange}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Select Distance from current location\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid> */}\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  // color=\"primary\"\r\n                  className={classes.margin}\r\n                  onClick={handleClick}\r\n                  style={{ backgroundColor: \"#30a05f\", color: \"white\" }}\r\n                >\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\" },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  // { title: '12 Angry Men', year: 1957 },\r\n  // { title: \"Schindler's List\", year: 1993 },\r\n  // { title: 'Pulp Fiction', year: 1994 },\r\n  // { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n  // { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  // { title: 'Fight Club', year: 1999 },\r\n  // { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n  // { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n  // { title: 'Forrest Gump', year: 1994 },\r\n  // { title: 'Inception', year: 2010 },\r\n  // { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n  // { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  // { title: 'Goodfellas', year: 1990 },\r\n  // { title: 'The Matrix', year: 1999 },\r\n  // { title: 'Seven Samurai', year: 1954 },\r\n  // { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n  // { title: 'City of God', year: 2002 },\r\n  // { title: 'Se7en', year: 1995 },\r\n  // { title: 'The Silence of the Lambs', year: 1991 },\r\n  // { title: \"It's a Wonderful Life\", year: 1946 },\r\n  // { title: 'Life Is Beautiful', year: 1997 },\r\n  // { title: 'The Usual Suspects', year: 1995 },\r\n  // { title: 'Léon: The Professional', year: 1994 },\r\n  // { title: 'Spirited Away', year: 2001 },\r\n  // { title: 'Saving Private Ryan', year: 1998 },\r\n  // { title: 'Once Upon a Time in the West', year: 1968 },\r\n  // { title: 'American History X', year: 1998 },\r\n  // { title: 'Interstellar', year: 2014 },\r\n  // { title: 'Casablanca', year: 1942 },\r\n  // { title: 'City Lights', year: 1931 },\r\n  // { title: 'Psycho', year: 1960 },\r\n  // { title: 'The Green Mile', year: 1999 },\r\n  // { title: 'The Intouchables', year: 2011 },\r\n  // { title: 'Modern Times', year: 1936 },\r\n  // { title: 'Raiders of the Lost Ark', year: 1981 },\r\n  // { title: 'Rear Window', year: 1954 },\r\n  // { title: 'The Pianist', year: 2002 },\r\n  // { title: 'The Departed', year: 2006 },\r\n  // { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n  // { title: 'Back to the Future', year: 1985 },\r\n  // { title: 'Whiplash', year: 2014 },\r\n  // { title: 'Gladiator', year: 2000 },\r\n  // { title: 'Memento', year: 2000 },\r\n  // { title: 'The Prestige', year: 2006 },\r\n  // { title: 'The Lion King', year: 1994 },\r\n  // { title: 'Apocalypse Now', year: 1979 },\r\n  // { title: 'Alien', year: 1979 },\r\n  // { title: 'Sunset Boulevard', year: 1950 },\r\n  // { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\r\n  // { title: 'The Great Dictator', year: 1940 },\r\n  // { title: 'Cinema Paradiso', year: 1988 },\r\n  // { title: 'The Lives of Others', year: 2006 },\r\n  // { title: 'Grave of the Fireflies', year: 1988 },\r\n  // { title: 'Paths of Glory', year: 1957 },\r\n  // { title: 'Django Unchained', year: 2012 },\r\n  // { title: 'The Shining', year: 1980 },\r\n  // { title: 'WALL·E', year: 2008 },\r\n  // { title: 'American Beauty', year: 1999 },\r\n  // { title: 'The Dark Knight Rises', year: 2012 },\r\n  // { title: 'Princess Mononoke', year: 1997 },\r\n  // { title: 'Aliens', year: 1986 },\r\n  // { title: 'Oldboy', year: 2003 },\r\n  // { title: 'Once Upon a Time in America', year: 1984 },\r\n  // { title: 'Witness for the Prosecution', year: 1957 },\r\n  // { title: 'Das Boot', year: 1981 },\r\n  // { title: 'Citizen Kane', year: 1941 },\r\n  // { title: 'North by Northwest', year: 1959 },\r\n  // { title: 'Vertigo', year: 1958 },\r\n  // { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n  // { title: 'Reservoir Dogs', year: 1992 },\r\n  // { title: 'Braveheart', year: 1995 },\r\n  // { title: 'M', year: 1931 },\r\n  // { title: 'Requiem for a Dream', year: 2000 },\r\n  // { title: 'Amélie', year: 2001 },\r\n  // { title: 'A Clockwork Orange', year: 1971 },\r\n  // { title: 'Like Stars on Earth', year: 2007 },\r\n  // { title: 'Taxi Driver', year: 1976 },\r\n  // { title: 'Lawrence of Arabia', year: 1962 },\r\n  // { title: 'Double Indemnity', year: 1944 },\r\n  // { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\r\n  // { title: 'Amadeus', year: 1984 },\r\n  // { title: 'To Kill a Mockingbird', year: 1962 },\r\n  // { title: 'Toy Story 3', year: 2010 },\r\n  // { title: 'Logan', year: 2017 },\r\n  // { title: 'Full Metal Jacket', year: 1987 },\r\n  // { title: 'Dangal', year: 2016 },\r\n  // { title: 'The Sting', year: 1973 },\r\n  // { title: '2001: A Space Odyssey', year: 1968 },\r\n  // { title: \"Singin' in the Rain\", year: 1952 },\r\n  // { title: 'Toy Story', year: 1995 },\r\n  // { title: 'Bicycle Thieves', year: 1948 },\r\n  // { title: 'The Kid', year: 1921 },\r\n  // { title: 'Inglourious Basterds', year: 2009 },\r\n  // { title: 'Snatch', year: 2000 },\r\n  // { title: '3 Idiots', year: 2009 },\r\n  // { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n];\r\n","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\helper\\authHelper.js",[],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Cards\\FirstBody\\FirstBody.js",["180","181","182","183","184","185","186","187","188","189"],"import {\r\n  Box,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  Paper,\r\n  Slider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n// import { set } from \"js-cookie\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { machinery as allItems } from \"../../Items/Items\";\r\nimport Axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  gridOne: {\r\n    marginTop: theme.spacing(1.3),\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  checkBox: {\r\n    textAlign: \"left\",\r\n    placeSelf: \"center\",\r\n  },\r\n}));\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: \"#3f51b5\",\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"inherit\",\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\",\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\nfunction FirstBody({ itemData, passCrop }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    seed: false,\r\n    machinery: false,\r\n  });\r\n  const [value, setValue] = useState([1, 100]);\r\n  const [price, setPrice] = useState(0);\r\n  const [filterItem, setFilterItem] = useState({});\r\n  const [allCrops, setAllCrops] = useState([]);\r\n  const [selectedCrop, setSelectedCrop] = useState({});\r\n  const [cropsItems, setCropsItems] = useState([]);\r\n  const [itemCrop, setItemCrop] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/getallcrops\")\r\n      .then((allDatas) => {\r\n        setAllCrops(allDatas.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const finalPrice = value[1] - value[0];\r\n    setPrice(finalPrice);\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"item Data\", itemData);\r\n    // console.log(\"selected crop\", selectedCrop.length);\r\n\r\n    if (selectedCrop.length === 0) {\r\n      console.log(\"ite empty\");\r\n    } else {\r\n      Axios.get(\"http://localhost:5000/getselectedcrops\", {\r\n        params: {\r\n          selectedCrop,\r\n        },\r\n      })\r\n        .then((cropsData) => {\r\n          console.log(\"crops data\", cropsData.data);\r\n          const cropItemsDatas = cropsData.data;\r\n          setCropsItems(cropsData.data);\r\n          passCrop(cropsData.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [selectedCrop]);\r\n\r\n  console.log(\"selected crops\", cropsItems);\r\n\r\n  const handleChange = (text) => (event) => {\r\n    console.log(\"text\", text);\r\n    console.log(\"event.target.value\", event.target.value);\r\n\r\n    if (event.target.checked === true) {\r\n      console.log(\"not a true value\", event.target.checked);\r\n\r\n      console.log(\"all items is there\", itemData);\r\n      const fiteredItems = itemData.filter((data) => data.crops === text);\r\n      console.log(\"filterd items yyess\", fiteredItems);\r\n\r\n      passCrop(fiteredItems);\r\n    } else {\r\n      console.log(\"not a true value\", event.target.checked);\r\n    }\r\n  };\r\n  // const handleChange = (text) => (event) => {\r\n  //   // setState({ ...state, [text]: event.target.checked });\r\n  //   // setFilterItem({ ...filterItem, [text]: event.target.value });\r\n  //   const item = event.target.value;\r\n  //   const checked = event.target.checked;\r\n  //   console.log(\"item \", item);\r\n  //   console.log(\"checked \", checked);\r\n  //   // setSelectedCrop({ ...selectedCrop, checked });\r\n  //   setFilterItem({ ...filterItem, [text]: event.target.checked });\r\n  //   if (checked) {\r\n  //     setSelectedCrop(item);\r\n  //     setItemCrop([...itemCrop, item]);\r\n  //   } else if (checked == false) {\r\n  //     const filter = itemCrop.filter((data) => data !== text);\r\n\r\n  //     console.log(\"filterssssssssssssss\", itemCrop);\r\n\r\n  //     passCrop(filter);\r\n  //   }\r\n  // };\r\n\r\n  console.log(\"items crop\", itemCrop);\r\n  console.log(\"item all selected\", selectedCrop);\r\n\r\n  // useEffect(() => {\r\n  //   const { seed, machinery } = state;\r\n  //   if (seed && machinery) {\r\n  //     const selectedItem = allItems.filter((item) => item.type);\r\n  //     console.log(\"selectedItem\", selectedItem);\r\n  //     //   passData(selectedItem);\r\n  //   } else if (machinery) {\r\n  //     const selectedItem = allItems.filter(\r\n  //       (item) => filterItem.machinery === item.type\r\n  //     );\r\n  //     console.log(\"machinery\", selectedItem);\r\n  //     //   passData(selectedItem);\r\n  //   } else if (seed) {\r\n  //     const selectedItem = allItems.filter(\r\n  //       (item) => filterItem.seed === item.type\r\n  //     );\r\n  //     console.log(\"seed\", selectedItem);\r\n  //     //   passData(selectedItem);\r\n  //   } else {\r\n  //     //   passData(allItems);\r\n  //   }\r\n  // }, [state]);\r\n\r\n  // const items = [\"seed\", \"machinery\"];\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <Typography>\r\n        <Typography gutterBottom variant=\"h9\" component=\"h4\" align=\"left\">\r\n          CROP\r\n        </Typography>\r\n        <FormGroup row>\r\n          <Grid container direction=\"column\" spacing={0}>\r\n            <Box mr={10} className={classes.checkBox}>\r\n              {allCrops.map((data, index) => {\r\n                const { crop } = data;\r\n                return (\r\n                  <Grid item>\r\n                    <FormControlLabel\r\n                      key={index}\r\n                      control={\r\n                        <Checkbox name={crop} onChange={handleChange(crop)} />\r\n                      }\r\n                      label={crop}\r\n                      value={crop}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Box>\r\n          </Grid>\r\n        </FormGroup>\r\n        {/* <Paper className={classes.paper} className={classes.gridOne}>\r\n          xs=4\r\n        </Paper> */}\r\n        <Divider className={classes.divider} />\r\n        <Typography gutterBottom variant=\"h9\" component=\"h4\" align=\"left\">\r\n          PRICE\r\n        </Typography>\r\n        <Box>\r\n          <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n              {price}\r\n            </Typography>\r\n            <PrettoSlider\r\n              value={value}\r\n              onChange={handleSliderChange}\r\n              valueLabelDisplay=\"auto\"\r\n              aria-labelledby=\"range-slider\"\r\n              getAriaValueText={valuetext}\r\n            />\r\n          </div>\r\n        </Box>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\n export default FirstBody;\r\n","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Items\\Items.js",[],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\HomePage\\Items\\CropItem.js",[],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\ProductPage\\MoreByCompany\\MoreByCompany.js",["190","191","192","193","194"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Link from \"@material-ui/core/Typography\";\r\nimport { Box, Divider, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { useHistory, Link as Links } from \"react-router-dom\";\r\n// import FirstBody from \"./FirstBody/FirstBody\";\r\n// import { machinery } from \"../Items/Items\";\r\n// import SeachItem from \"../SearchItem\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  roots: {\r\n    textAlign: \"-webkit-center\",\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  space: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  gridOne: {\r\n    marginTop: theme.spacing(1.3),\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  searchItem: {\r\n    margin: theme.spacing(4),\r\n  },\r\n  crop: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  price: {\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1),\r\n    fontWeight: \"bold\",\r\n    fontSize: theme.spacing(1.8),\r\n  },\r\n  itemName: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  moreProducts: {\r\n    fontSize: 20,\r\n    fontWeight: \"700\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"1.47\",\r\n    letterSpacing: \".08px\",\r\n    textAlign: \"left\",\r\n    color: \"#2b2b2b\",\r\n    marginTop: \"15px\",\r\n  },\r\n}));\r\nconst MediaCard = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [itemData, setItemData] = useState([]);\r\n\r\n  const handleClick = (id) => {\r\n    console.log(\"item _id\", id);\r\n    history.push(`/product?id=${id}`);\r\n    // history.push(`/view?id=${id}`);\r\n  };\r\n\r\n  const passData = (items) => {\r\n    setItemData(items);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(`http://localhost:5000/getsimileritems`)\r\n      .then((items) => {\r\n        console.log(\"similar items \", items.data);\r\n        setItemData(items.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.roots}>\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <Typography variant=\"h4\" className={classes.moreProducts}>\r\n            Similar Products\r\n          </Typography>\r\n          <Grid item>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Grid\r\n                  container\r\n                  spacing={20}\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  {itemData.map((data, index) => {\r\n                    const { youtube } = data;\r\n                    return (\r\n                      <Grid\r\n                        key={index}\r\n                        xs={12}\r\n                        sm={6}\r\n                        md={3}\r\n                        className={classes.space}\r\n                      >\r\n                        <Card className={classes.root} mt={2}>\r\n                          <CardActionArea onClick={() => handleClick(data._id)}>\r\n                            <Grid container>\r\n                              <Grid item xs={6} className={classes.itemName}>\r\n                                <Grid>\r\n                                  <Typography variant=\"h5\">\r\n                                    {data.name}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid\r\n                                  container\r\n                                  variant=\"h4\"\r\n                                  spacing={1}\r\n                                  // align=\"center\"\r\n                                  className={classes.price}\r\n                                >\r\n                                  <Grid item>₹</Grid>\r\n                                  <Grid item>{data.price}</Grid>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <CardMedia\r\n                                  className={classes.media}\r\n                                  image={data.image}\r\n                                  title=\"Contemplative Reptile\"\r\n                                />\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Divider />\r\n                            <CardContent>\r\n                              <Grid container className={classes.cro}>\r\n                                <Grid item xs={6}>\r\n                                  <Grid\r\n                                    container\r\n                                    direction=\"column\"\r\n                                    align=\"left\"\r\n                                  >\r\n                                    <Grid variant=\"h4\">crop</Grid>\r\n                                    <Grid>\r\n                                      <Typography variant=\"h6\">\r\n                                        {data.crop}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Divider />\r\n                                <Grid item xs={6}>\r\n                                  <Typography variant=\"h6\">Variety</Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Divider />\r\n                              <Grid container className={classes.crop}>\r\n                                <Grid item xs={6} align=\"left\">\r\n                                  <Typography variant=\"subtitle1\">\r\n                                    Manufactured\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                  <Typography variant=\"h6\">\r\n                                    {data.manufactured}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Divider />\r\n                              <Grid container className={classes.crop}>\r\n                                <Grid item xs={6}>\r\n                                  <Typography\r\n                                    variant=\"subtitle1\"\r\n                                    align=\"left\"\r\n                                    color=\"inherit\"\r\n                                  >\r\n                                    Prebuilt\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                  <Typography variant=\"h6\">\r\n                                    {data.prebuilt}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Divider />\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Grid container spacing={2}>\r\n                              <Grid item xs={6}>\r\n                                <Link size=\"small\" color=\"primary\">\r\n                                  Name\r\n                                </Link>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <Links\r\n                                  cursor=\"default\"\r\n                                  color=\"primary\"\r\n                                  size=\"small\"\r\n                                  to={{\r\n                                    pathname: youtube,\r\n                                  }}\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <YouTubeIcon color=\"error\" />\r\n                                </Links>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </CardActions>\r\n                        </Card>\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n export default MediaCard;\r\n","E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\LandingPage\\LandingPage.js",["195","196","197","198","199","200","201"],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\LandingPage\\SearchCard.js",["202","203","204"],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\LandingPage\\ItemsCard.js",["205","206"],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\LandingPage\\SeedItems.js",["207","208","209"],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\UserLocation\\UserLocation.js",["210","211","212"],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\Weather\\Weather.js",["213"],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\Weather\\ForecasteWeather.js",[],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\Weather\\DayCard.js",[],"E:\\VNC Project\\Pland Farm\\mernstack\\client\\src\\components\\LandingPage\\Itemcarousel.js",["214","215"],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":14},{"ruleId":"220","severity":1,"message":"224","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":24},{"ruleId":"220","severity":1,"message":"225","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":16},{"ruleId":"220","severity":1,"message":"226","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":11},{"ruleId":"220","severity":1,"message":"227","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":24},{"ruleId":"220","severity":1,"message":"228","line":1,"column":27,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"224","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":24},{"ruleId":"220","severity":1,"message":"225","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":16},{"ruleId":"220","severity":1,"message":"226","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":11},{"ruleId":"220","severity":1,"message":"227","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":24},{"ruleId":"220","severity":1,"message":"229","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":12},{"ruleId":"220","severity":1,"message":"230","line":9,"column":30,"nodeType":"222","messageId":"223","endLine":9,"endColumn":35},{"ruleId":"220","severity":1,"message":"231","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":19},{"ruleId":"220","severity":1,"message":"232","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":16},{"ruleId":"220","severity":1,"message":"233","line":18,"column":10,"nodeType":"222","messageId":"223","endLine":18,"endColumn":15},{"ruleId":"220","severity":1,"message":"234","line":102,"column":10,"nodeType":"222","messageId":"223","endLine":102,"endColumn":16},{"ruleId":"220","severity":1,"message":"235","line":102,"column":18,"nodeType":"222","messageId":"223","endLine":102,"endColumn":26},{"ruleId":"220","severity":1,"message":"236","line":110,"column":9,"nodeType":"222","messageId":"223","endLine":110,"endColumn":17},{"ruleId":"237","severity":1,"message":"238","line":136,"column":6,"nodeType":"239","endLine":136,"endColumn":8,"suggestions":"240"},{"ruleId":"220","severity":1,"message":"241","line":181,"column":38,"nodeType":"222","messageId":"223","endLine":181,"endColumn":43},{"ruleId":"220","severity":1,"message":"242","line":181,"column":45,"nodeType":"222","messageId":"223","endLine":181,"endColumn":50},{"ruleId":"220","severity":1,"message":"243","line":148,"column":5,"nodeType":"222","messageId":"223","endLine":148,"endColumn":8},{"ruleId":"220","severity":1,"message":"244","line":157,"column":5,"nodeType":"222","messageId":"223","endLine":157,"endColumn":8},{"ruleId":"237","severity":1,"message":"245","line":168,"column":6,"nodeType":"239","endLine":168,"endColumn":8,"suggestions":"246"},{"ruleId":"220","severity":1,"message":"228","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"247","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":17},{"ruleId":"220","severity":1,"message":"248","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":13},{"ruleId":"220","severity":1,"message":"229","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":14},{"ruleId":"220","severity":1,"message":"249","line":68,"column":10,"nodeType":"222","messageId":"223","endLine":68,"endColumn":18},{"ruleId":"220","severity":1,"message":"250","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":17},{"ruleId":"220","severity":1,"message":"251","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":13},{"ruleId":"220","severity":1,"message":"252","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":18},{"ruleId":"220","severity":1,"message":"253","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":16},{"ruleId":"220","severity":1,"message":"254","line":15,"column":8,"nodeType":"222","messageId":"223","endLine":15,"endColumn":25},{"ruleId":"220","severity":1,"message":"255","line":16,"column":8,"nodeType":"222","messageId":"223","endLine":16,"endColumn":16},{"ruleId":"220","severity":1,"message":"226","line":17,"column":10,"nodeType":"222","messageId":"223","endLine":17,"endColumn":13},{"ruleId":"220","severity":1,"message":"256","line":17,"column":21,"nodeType":"222","messageId":"223","endLine":17,"endColumn":26},{"ruleId":"220","severity":1,"message":"257","line":17,"column":28,"nodeType":"222","messageId":"223","endLine":17,"endColumn":44},{"ruleId":"220","severity":1,"message":"258","line":18,"column":8,"nodeType":"222","messageId":"223","endLine":18,"endColumn":14},{"ruleId":"220","severity":1,"message":"259","line":21,"column":8,"nodeType":"222","messageId":"223","endLine":21,"endColumn":17},{"ruleId":"220","severity":1,"message":"224","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":24},{"ruleId":"220","severity":1,"message":"225","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":16},{"ruleId":"220","severity":1,"message":"226","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":11},{"ruleId":"220","severity":1,"message":"227","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":24},{"ruleId":"220","severity":1,"message":"260","line":83,"column":19,"nodeType":"222","messageId":"223","endLine":83,"endColumn":23},{"ruleId":"220","severity":1,"message":"261","line":83,"column":25,"nodeType":"222","messageId":"223","endLine":83,"endColumn":32},{"ruleId":"220","severity":1,"message":"262","line":83,"column":42,"nodeType":"222","messageId":"223","endLine":83,"endColumn":47},{"ruleId":"220","severity":1,"message":"263","line":44,"column":11,"nodeType":"222","messageId":"223","endLine":44,"endColumn":22},{"ruleId":"220","severity":1,"message":"264","line":44,"column":24,"nodeType":"222","messageId":"223","endLine":44,"endColumn":28},{"ruleId":"220","severity":1,"message":"265","line":164,"column":7,"nodeType":"222","messageId":"223","endLine":164,"endColumn":18},{"ruleId":"220","severity":1,"message":"230","line":8,"column":3,"nodeType":"222","messageId":"223","endLine":8,"endColumn":8},{"ruleId":"220","severity":1,"message":"266","line":15,"column":23,"nodeType":"222","messageId":"223","endLine":15,"endColumn":31},{"ruleId":"220","severity":1,"message":"267","line":70,"column":10,"nodeType":"222","messageId":"223","endLine":70,"endColumn":15},{"ruleId":"220","severity":1,"message":"268","line":70,"column":17,"nodeType":"222","messageId":"223","endLine":70,"endColumn":25},{"ruleId":"220","severity":1,"message":"269","line":76,"column":10,"nodeType":"222","messageId":"223","endLine":76,"endColumn":20},{"ruleId":"220","severity":1,"message":"270","line":76,"column":22,"nodeType":"222","messageId":"223","endLine":76,"endColumn":35},{"ruleId":"220","severity":1,"message":"271","line":78,"column":24,"nodeType":"222","messageId":"223","endLine":78,"endColumn":39},{"ruleId":"220","severity":1,"message":"272","line":80,"column":20,"nodeType":"222","messageId":"223","endLine":80,"endColumn":31},{"ruleId":"220","severity":1,"message":"273","line":113,"column":17,"nodeType":"222","messageId":"223","endLine":113,"endColumn":31},{"ruleId":"237","severity":1,"message":"274","line":119,"column":6,"nodeType":"239","endLine":119,"endColumn":20,"suggestions":"275"},{"ruleId":"220","severity":1,"message":"226","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":13},{"ruleId":"220","severity":1,"message":"230","line":9,"column":30,"nodeType":"222","messageId":"223","endLine":9,"endColumn":35},{"ruleId":"220","severity":1,"message":"232","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":16},{"ruleId":"220","severity":1,"message":"276","line":16,"column":10,"nodeType":"222","messageId":"223","endLine":16,"endColumn":18},{"ruleId":"220","severity":1,"message":"236","line":79,"column":9,"nodeType":"222","messageId":"223","endLine":79,"endColumn":17},{"ruleId":"220","severity":1,"message":"228","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"277","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"278","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":16},{"ruleId":"279","severity":1,"message":"280","line":81,"column":76,"nodeType":"281","endLine":81,"endColumn":88},{"ruleId":"282","severity":1,"message":"283","line":87,"column":29,"nodeType":"284","endLine":87,"endColumn":86},{"ruleId":"279","severity":1,"message":"280","line":98,"column":83,"nodeType":"281","endLine":98,"endColumn":95},{"ruleId":"279","severity":1,"message":"280","line":99,"column":85,"nodeType":"281","endLine":99,"endColumn":97},{"ruleId":"220","severity":1,"message":"228","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"277","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"285","line":23,"column":11,"nodeType":"222","messageId":"223","endLine":23,"endColumn":18},{"ruleId":"220","severity":1,"message":"228","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"277","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"228","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"277","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"282","severity":1,"message":"283","line":13,"column":29,"nodeType":"284","endLine":13,"endColumn":78},{"ruleId":"220","severity":1,"message":"261","line":54,"column":25,"nodeType":"222","messageId":"223","endLine":54,"endColumn":32},{"ruleId":"220","severity":1,"message":"261","line":76,"column":27,"nodeType":"222","messageId":"223","endLine":76,"endColumn":34},{"ruleId":"237","severity":1,"message":"286","line":98,"column":6,"nodeType":"239","endLine":98,"endColumn":8,"suggestions":"287"},{"ruleId":"220","severity":1,"message":"288","line":1,"column":8,"nodeType":"222","messageId":"223","endLine":1,"endColumn":13},{"ruleId":"220","severity":1,"message":"277","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"282","severity":1,"message":"283","line":26,"column":13,"nodeType":"284","endLine":26,"endColumn":89},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Paper' is defined but never used.","'machinery' is defined but never used.","'LinkIcon' is defined but never used.","'crops' is defined but never used.","'cropss' is assigned a value but never used.","'setCrops' is assigned a value but never used.","'passData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'itemData'. Either include it or remove the dependency array.","ArrayExpression",["291"],"'crops' is assigned a value but never used.","'model' is assigned a value but never used.","'_id' is assigned a value but never used.","'use' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["292"],"'Container' is defined but never used.","'Cards' is defined but never used.","'anchorEl' is assigned a value but never used.","'InputBase' is defined but never used.","'Badge' is defined but never used.","'SearchIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MoreIcon' is defined but never used.","'Slide' is defined but never used.","'useScrollTrigger' is defined but never used.","'LogOut' is defined but never used.","'PropTypes' is defined but never used.","'user' is assigned a value but never used.","'message' is assigned a value but never used.","'otpId' is assigned a value but never used.","'manufacture' is assigned a value but never used.","'crop' is assigned a value but never used.","'top100Films' is assigned a value but never used.","'allItems' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'filterItem' is assigned a value but never used.","'setFilterItem' is assigned a value but never used.","'setSelectedCrop' is assigned a value but never used.","'setItemCrop' is assigned a value but never used.","'cropItemsDatas' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'passCrop'. Either include it or remove the dependency array. If 'passCrop' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["293"],"'Redirect' is defined but never used.","'useState' is defined but never used.","'control1' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userDatas'. Either include it or remove the dependency array. If 'userDatas' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["294"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},"Update the dependencies array to be: [itemData]",{"range":"303","text":"304"},"Update the dependencies array to be: [id]",{"range":"305","text":"306"},"Update the dependencies array to be: [passCrop, selectedCrop]",{"range":"307","text":"308"},"Update the dependencies array to be: [userDatas]",{"range":"309","text":"310"},[3546,3548],"[itemData]",[3591,3593],"[id]",[2792,2806],"[passCrop, selectedCrop]",[3849,3851],"[userDatas]"]